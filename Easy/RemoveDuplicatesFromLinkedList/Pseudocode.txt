Sample input
	linkedList = 1 -> 1 -> 3 -> 4 -> 4 -> 4 -> 5 -> 6 -> 6
	
Sample output
	1 -> 3 -> 4 -> 5 -> 6
	
	

Steps before code:
	1. Iniatiate a current and previous pointer
	2. Loop through the linked list
	3. if there is a duplicate, make the previous pointer point to the next node of the current pointer as long as the next node of the current pointer is not null.
	
	
Steps after code:
	1. Declare a travNode variable which will be a reference to the head node. This travNode will traverse the linked list.
	2. Loop through the linked list while travNode is not null.
	3. Check if the value of the node next to travNode is equal to the travNode value.
	4. if they are equal, run a loop while the values are equal and move the node next to travNode to point to the next node that is next to the travNode next node.
	5. when the loop stops it means that it has reached the next distinct node.
	6. Update travNode with travNode.next
	7. return the head of the linked list
	